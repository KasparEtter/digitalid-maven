<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>net.digitalid</groupId>
    <artifactId>master</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>
    
    <organization>
        <name>Synacts GmbH</name>
        <url>https://www.synacts.com</url>
    </organization>
    
    <licenses>
        <license>
            <name>To be determined</name>
            <url>https://www.synacts.com/company/#contact</url>
            <comments>Until the license is determined, all rights are reserved by Synacts GmbH.</comments>
        </license>
    </licenses>
    
    <repositories>
        <repository>
            <id>digitalid-releases</id>
            <name>Digital ID Releases</name>
            <url>https://repo.digitalid.net/content/repositories/releases/</url>
        </repository>
        <repository>
            <id>digitalid-snapshots</id>
            <name>Digital ID Snapshots</name>
            <url>https://repo.digitalid.net/content/repositories/snapshots/</url>
        </repository>
    </repositories>
    
    <distributionManagement>
        <repository>
            <id>digitalid-deployment</id>
            <name>Final Releases</name>
            <url>https://repo.digitalid.net/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>digitalid-deployment</id>
            <name>Snapshot Releases</name>
            <url>https://repo.digitalid.net/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
    
    <pluginRepositories>
        <pluginRepository>
            <id>sonatype-nexus-snapshots</id>
            <name>sonatype-nexus-snapshots</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots</url>
        </pluginRepository>
    </pluginRepositories>
    
    <!-- You can override properties with 'mvn install -Dtests.skip=true'. -->
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.version>1.8</maven.compiler.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.argument></maven.compiler.argument>
        <maven.compiler.argument1></maven.compiler.argument1>
        <maven.compiler.argument2></maven.compiler.argument2>
        <maven.javadoc.skip>true</maven.javadoc.skip>
        <maven.source.skip>true</maven.source.skip>
        <maven.test.skip>false</maven.test.skip>
        <maven.test.failure.ignore>false</maven.test.failure.ignore>
        <assertj.packages>none</assertj.packages>
        <assertj.classes></assertj.classes>
        <jacoco.skip>false</jacoco.skip>
    </properties>
    
    <!-- You can activate a profile with 'mvn install -P fast,ignore,debugging'. -->
    <profiles>
        
        <!-- Fast compilation by skipping all test: -->
        <profile>
            <id>fast</id>
            <properties>
                <maven.test.skip>true</maven.test.skip>
                <jacoco.skip>true</jacoco.skip>
            </properties>
        </profile>
        
        <!-- Build all modules by ignoring failed tests: -->
        <profile>
            <id>ignore</id>
            <properties>
                <maven.test.failure.ignore>true</maven.test.failure.ignore>
            </properties>
        </profile>
        
        <!-- Remote debugging of the annotation processing: -->
        <profile>
            <id>debugging</id>
            <properties>
                <maven.compiler.argument1>-J-Xdebug</maven.compiler.argument1>
                <maven.compiler.argument2>-J-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005</maven.compiler.argument2>
            </properties>
        </profile>
        
        <!-- Deploy the artifacts with Javadoc and sources: -->
        <profile>
            <id>deployment</id>
            <properties>
                <maven.javadoc.skip>false</maven.javadoc.skip>
                <maven.source.skip>false</maven.source.skip>
            </properties>
        </profile>
        
        <!-- Generate the code in optimized production mode: -->
        <profile>
            <id>production</id>
            <properties>
                <maven.compiler.argument1>-Aproduction</maven.compiler.argument1>
            </properties>
        </profile>
        
    </profiles>
    
    <dependencies>
        
        <!-- https://mvnrepository.com/artifact/com.google.j2objc/j2objc-annotations -->
        <dependency>
            <groupId>com.google.j2objc</groupId>
            <artifactId>j2objc-annotations</artifactId>
            <version>1.1</version>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>3.6.2</version>
            <scope>test</scope>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/junit/junit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        
    </dependencies>
    
    <build>
        <plugins>
            
            <!-- Required by the Eclipse IDE to locate the generated sources. -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <id>add-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/annotations</source>
                                <source>target/generated-test-sources/annotations</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <fork>true</fork>
                    <verbose>true</verbose>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <executable>${maven.compiler.executable}</executable>
                    <compilerVersion>${maven.compiler.version}</compilerVersion>
                    <compilerArgs>
                        <arg>${maven.compiler.argument}</arg>
                        <arg>${maven.compiler.argument1}</arg>
                        <arg>${maven.compiler.argument2}</arg>
                    </compilerArgs>
                    <!-- NetBeans seems to need the following line sometimes: -->
                    <generatedSourcesDirectory>target/generated-sources/annotations</generatedSourcesDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>default-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <compilerArguments>
                                <bootclasspath>${compiler.bootclasspath.android}</bootclasspath>
                            </compilerArguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>default-testCompile</id>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                        <configuration>
                            <compilerArguments>
                                <bootclasspath>${compiler.bootclasspath.regular}</bootclasspath>
                            </compilerArguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
                <configuration>
                    <quiet>true</quiet>
                    <linksource>false</linksource>
                    <doctitle>Digital ID</doctitle>
                    <additionalparam>-Xdoclint:none</additionalparam>
                    <links>
                        <!-- Include all utility Javadocs here! -->
                        <!--<link>https://docs.digitalid.net/utility/logging/${project.version}/</link>-->
                        <link>http://docs.oracle.com/javase/7/docs/api/</link>
                    </links>
                    <tagletArtifacts>
                        <tagletArtifact>
                            <groupId>net.digitalid.utility</groupId>
                            <artifactId>utility-taglets</artifactId>
                            <version>${project.version}</version>
                        </tagletArtifact>
                    </tagletArtifacts>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadoc</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Execute the plugin with 'mvn assertj:generate-assertions'. -->
            <plugin>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-assertions-generator-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <hierarchical>true</hierarchical>
                    <generateAssertions>true</generateAssertions>
                    <generateBddAssertions>false</generateBddAssertions>
                    <generateSoftAssertions>false</generateSoftAssertions>
                    <generateJUnitSoftAssertions>false</generateJUnitSoftAssertions>
                    <templates>
                        <templatesDirectory>${DIGITALID_HOME}/libraries/templates</templatesDirectory>
                        <assertionsEntryPointClass>assertions_entry_point_class.txt</assertionsEntryPointClass>
                        <assertionEntryPointMethod>assertions_entry_point_method.txt</assertionEntryPointMethod>
                    </templates>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-assertions</id>
                        <goals>
                            <goal>generate-assertions</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.7.7.201606060606</version>
                <configuration>
                    <destFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</destFile>
                    <dataFile>${project.build.directory}/coverage-reports/jacoco-unit.exec</dataFile>
                </configuration>
                <executions>
                    <execution>
                        <id>jacoco-prepare</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>jacoco-report</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Execute the plugin with 'mvn j2objc:convert'. -->
            <plugin>
                <groupId>com.smoope.utils</groupId>
                <artifactId>j2objc-maven-plugin</artifactId>
                <version>1.1.3-SNAPSHOT</version>
                <configuration>
                    <j2objcPath>${J2OBJC_HOME}/j2objc</j2objcPath>
                    <noPackageDirectories>true</noPackageDirectories>
                    <skipParent>true</skipParent>
                    <verbose>false</verbose>
                    <werror>true</werror>
                    <useArc>true</useArc>
                    <source>8</source>
                </configuration>
            </plugin>
            
        </plugins>
    </build>
    
</project>
